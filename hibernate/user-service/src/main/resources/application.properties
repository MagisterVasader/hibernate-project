spring.datasource.url=jdbc:mysql://localhost:3306/user_service
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory
spring.jpa.properties.hibernate.javax.cache.provider=org.ehcache.jsr107.EhcacheCachingProvider
spring.jpa.properties.hibernate.javax.cache.url=classpath:jcache.xml
spring.jpa.properties.hibernate.cache.use_query_cache=true
# TODO: NOTE
# If you are using second_level_cache and use READ_ONLY strategy
# to avoid re-creation of objects from cache to app and vice versa
# you can say to hibernate store the links to objects using use_reference_entries parameter

spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true